import axios from 'axios'
import type { NextPage } from 'next'
import Head from 'next/head'
import { ChangeEvent, FormEvent, MouseEvent, useState } from 'react'
import { Modal } from '../components/Modal'

const Home: NextPage = () => {

 const [url, setUrl] = useState<string>('')
 const [error, setError] = useState<string>('')
 const [loading, setLoading] = useState<boolean>(false)
  const [shortUrl, setShortUrl] = useState<string>('')
  const [isOpen, setIsOpen] = useState<boolean>(false)

 const postUrl = async (e: MouseEvent<HTMLElement> ) => {
  e.preventDefault()
  try{
    if(url){
      setLoading(true)
      const res = await axios.post('/api/put-url', { url })
      if(res.data){
        console.log(res.data.newLink)
        setShortUrl(res.data.newLink)
        setUrl('')
        setIsOpen(true)
      }
    } else{
      setError('Please enter a valid URL')
    }
  } catch (err: any){
    setLoading(false)
    setError(err.response.data)
    console.log(err.response)
  }
 }

  return (
    <div className={'grid place-items-center h-screen py-2'}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     <div className="w-8/12 ">
       <div className=' text-pink-500 text-4xl font-bold mb-3 ' >urls</div>
       <div className='font-bold text-6xl mb-3 ' >when</div>
       <div className='font-bold text-6xl mb-4 '>the shorter, </div>
       <div className='w-11/12 bg-slate-300 rounded-lg h-12 flex  items-center mb-3 ' >
        <div className="p-2 flex ml-6 mr-4 ">
          <div className="rounded-full w-5 h-5 bg-red-500 mx-1"></div>
          <div className="rounded-full w-5 h-5 bg-yellow-500 mx-1"></div>
          <div className="rounded-full w-5 h-5 bg-green-500 mx-1"></div>
        </div>
        <div className='flex gap-1 h-full justify-center items-center  '>
          <div className="bg-slate-100 rounded-sm w-7 h-7 grid place-items-center"> <svg xmlns="http://www.w3.org/2000/svg" fill='#9CA3AF' viewBox="0 0 20 20"><path d="M12.452 4.516c.446.436.481 1.043 0 1.576L8.705 10l3.747 3.908c.481.533.446 1.141 0 1.574-.445.436-1.197.408-1.615 0-.418-.406-4.502-4.695-4.502-4.695a1.095 1.095 0 0 1 0-1.576s4.084-4.287 4.502-4.695c.418-.409 1.17-.436 1.615 0z"/></svg></div>
          <div className="bg-slate-100 rounded-sm w-7 h-7 grid place-items-center"> <svg xmlns="http://www.w3.org/2000/svg" fill='#9CA3AF' viewBox="0 0 20 20"><path d="M9.163 4.516c.418.408 4.502 4.695 4.502 4.695a1.095 1.095 0 0 1 0 1.576s-4.084 4.289-4.502 4.695c-.418.408-1.17.436-1.615 0-.446-.434-.481-1.041 0-1.574L11.295 10 7.548 6.092c-.481-.533-.446-1.141 0-1.576.445-.436 1.197-.409 1.615 0z"/></svg> </div>
        <div className="mx-4 bg-slate-100 rounded-sm w-7 h-7 grid place-items-center" ></div>
        </div>
        <div className='bg-slate-100 rounded-full w-7/12 h-9  flex items-center  mr-12 '>
        <div className="rounded-full w-6 h-6 bg-slate-400 ml-1.5 mr-4 "></div> 
        <div className='text-gray-600   italic '> https:// </div>
          <input 
            type="text" 
            className='bg-transparent border-none outline-none mx-1 text-gray-800 text-sm italic grow h-full' 
            value={url} 
            disabled={loading}
            onChange={(e: ChangeEvent<HTMLInputElement> )=> {
              let newUrl = e.target.value
              if(newUrl.includes('https://') || newUrl.includes('http://')){
                newUrl = newUrl.replace('https://', '').replace('http://', '')
              }
              setUrl(newUrl)
            } } 
            placeholder='Paste-a-long-url' />
        </div>
       </div>
       <div className='font-bold text-6xl mb-2'>
        the better
       </div>
       <button 
       className= {`bg-pink-500 rounded py-2 px-5 my-3 text-white font-bold text-lg ${loading ? 'cursor-not-allowed bg-blue-300 text-gray-700' : ''}`}
       onClick={postUrl}
       disabled={loading}
       >Shorten</button>
     </div>
     <Modal shortened={
        shortUrl
     } 
      isOpen={isOpen}
      onClose={()=> setIsOpen(false)}
      />
      
    </div>
  )
}

export default Home;
